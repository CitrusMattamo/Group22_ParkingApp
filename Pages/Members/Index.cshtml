@page
@model Group22_ParkingApp.Pages.Members.IndexModel

@{
    ViewData["Title"] = "Members";
}

<h1>Members</h1>

@if (User.IsInRole(Constants.ParkingAdministratorsRole))
{
    <p>
        <a asp-page="Create">Create New</a>
    </p>
}

@if (User.IsInRole(Constants.ParkingAdministratorsRole))
{
    <form asp-page="./Index" method="get">
        <div class="form-actions no-color">
            <p>
                Find by name:
                <input type="text" name="SearchString" value="@Model.CurrentFilter" />
                <input type="submit" value="Search" class="btn btn-primary" /> |
                <a asp-page="./Index">Back to full List</a>
            </p>
        </div>
    </form>
}
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Members[0].LastName)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Members[0].FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Members[0].LicenseNo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Members[0].Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Members[0].CreditCard)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Members)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LicenseNo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreditCard)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.Id">Details</a>
                    @if (User.IsInRole(Constants.ParkingAdministratorsRole))
                    {
                        <text> | </text>
                        <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@if (User.IsInRole(Constants.ParkingAdministratorsRole))
{ 
    
        var prevDisabled = !Model.Members.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.Members.HasNextPage ? "disabled" : "";
    


    <a asp-page="./Index"
       asp-route-sortOrder="@Model.CurrentSort"
       asp-route-pageIndex="@(Model.Members.PageIndex - 1)"
       asp-route-currentFilter="@Model.CurrentFilter"
       class="btn btn-primary @prevDisabled">
        Previous
    </a>
    <a asp-page="./Index"
       asp-route-sortOrder="@Model.CurrentSort"
       asp-route-pageIndex="@(Model.Members.PageIndex + 1)"
       asp-route-currentFilter="@Model.CurrentFilter"
       class="btn btn-primary @nextDisabled">
        Next
    </a>
}
